/* Generated by Yosys 0.7+96 (git sha1 2ca8d48, clang  -fPIC -Os) */

module picorv32(clk, resetn, trap, mem_valid, mem_instr, mem_ready, mem_addr, mem_wdata, mem_wstrb, mem_rdata, mem_la_read, mem_la_write, mem_la_addr, mem_la_wdata, mem_la_wstrb, pcpi_valid, pcpi_insn, pcpi_rs1, pcpi_rs2, pcpi_wr, pcpi_rd, pcpi_wait, pcpi_ready, irq, eoi, trace_valid, trace_data);
  wire [31:0] _0000_;
  wire _0001_;
  wire [63:0] _0002_;
  wire [63:0] _0003_;
  wire [7:0] _0004_;
  wire [31:0] _0005_;
  wire [31:0] _0006_;
  wire [4:0] _0007_;
  wire [4:0] _0008_;
  wire [4:0] _0009_;
  wire _0010_;
  wire _0011_;
  wire [31:0] _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire [1:0] _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire [4:0] _0079_;
  wire _0080_;
  wire _0081_;
  wire [15:0] _0082_;
  wire [31:0] _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire [31:0] _0091_;
  wire [1:0] _0092_;
  wire _0093_;
  wire [31:0] _0094_;
  wire [1:0] _0095_;
  wire [3:0] _0096_;
  wire _0097_;
  wire _0098_;
  wire [31:0] _0099_;
  wire [31:0] _0100_;
  wire [31:0] _0101_;
  wire [31:0] _0102_;
  wire [31:0] _0103_;
  wire [4:0] _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire [15:0] _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire [31:0] _0115_;
  wire [7:0] _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire [31:0] _0123_;
  wire [31:0] _0124_;
  wire [63:0] _0125_;
  wire [31:0] _0126_;
  wire [63:0] _0127_;
  wire [31:0] _0128_;
  wire [31:0] _0129_;
  wire [31:0] _0130_;
  wire [29:0] _0131_;
  wire [4:0] _0132_;
  wire [4:0] _0133_;
  wire [31:0] _0134_;
  wire [3:0] _0135_;
  wire [4:0] _0136_;
  wire [31:0] _0137_;
  reg [31:0] _0138_;
  wire _0139_;
  wire [31:0] _0140_;
  wire [31:0] _0141_;
  reg _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire [31:0] _0168_;
  wire [7:0] _0169_;
  wire [31:0] _0170_;
  wire [31:0] _0171_;
  wire [31:0] _0172_;
  wire [31:0] _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire [31:0] _0379_;
  wire [31:0] _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire [31:0] _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire [4:0] _0417_;
  wire [4:0] _0418_;
  wire [4:0] _0419_;
  wire [4:0] _0420_;
  wire [4:0] _0421_;
  wire [4:0] _0422_;
  wire [4:0] _0423_;
  wire [4:0] _0424_;
  wire [4:0] _0425_;
  wire [4:0] _0426_;
  wire [4:0] _0427_;
  wire [4:0] _0428_;
  wire [4:0] _0429_;
  wire [2:0] _0430_;
  wire [2:0] _0431_;
  wire [2:0] _0432_;
  wire [2:0] _0433_;
  wire [2:0] _0434_;
  wire [2:0] _0435_;
  wire [2:0] _0436_;
  wire [2:0] _0437_;
  wire [2:0] _0438_;
  wire [2:0] _0439_;
  wire [2:0] _0440_;
  wire [2:0] _0441_;
  wire [2:0] _0442_;
  wire [2:0] _0443_;
  wire [2:0] _0444_;
  wire [2:0] _0445_;
  wire [2:0] _0446_;
  wire [2:0] _0447_;
  wire [3:0] _0448_;
  wire [3:0] _0449_;
  wire [3:0] _0450_;
  wire [3:0] _0451_;
  wire [3:0] _0452_;
  wire [5:0] _0453_;
  wire [5:0] _0454_;
  wire [5:0] _0455_;
  wire [5:0] _0456_;
  wire [5:0] _0457_;
  wire [5:0] _0458_;
  wire [5:0] _0459_;
  wire [5:0] _0460_;
  wire [5:0] _0461_;
  wire [5:0] _0462_;
  wire [5:0] _0463_;
  wire [5:0] _0464_;
  wire [5:0] _0465_;
  wire [5:0] _0466_;
  wire [15:0] _0467_;
  wire [15:0] _0468_;
  wire [15:0] _0469_;
  wire [15:0] _0470_;
  wire [15:0] _0471_;
  wire [15:0] _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire [1:0] _0483_;
  wire [1:0] _0484_;
  wire _0485_;
  wire [1:0] _0486_;
  wire _0487_;
  wire [1:0] _0488_;
  wire [1:0] _0489_;
  wire [1:0] _0490_;
  wire [1:0] _0491_;
  wire [1:0] _0492_;
  wire [3:0] _0493_;
  wire [3:0] _0494_;
  wire [3:0] _0495_;
  wire [31:0] _0496_;
  wire [31:0] _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire [2:0] _0523_;
  wire _0524_;
  wire [1:0] _0525_;
  wire [11:0] _0526_;
  wire _0527_;
  wire _0528_;
  wire [3:0] _0529_;
  wire [3:0] _0530_;
  wire [3:0] _0531_;
  wire [3:0] _0532_;
  wire [3:0] _0533_;
  wire [3:0] _0534_;
  wire [3:0] _0535_;
  wire [3:0] _0536_;
  wire [3:0] _0537_;
  wire [3:0] _0538_;
  wire [3:0] _0539_;
  wire [3:0] _0540_;
  wire [3:0] _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire [31:0] _0569_;
  wire _0570_;
  wire _0571_;
  wire [4:0] _0572_;
  wire [4:0] _0573_;
  wire [4:0] _0574_;
  wire [4:0] _0575_;
  wire [4:0] _0576_;
  wire [4:0] _0577_;
  wire [4:0] _0578_;
  wire [4:0] _0579_;
  wire [4:0] _0580_;
  wire [7:0] _0581_;
  wire [4:0] _0582_;
  wire [4:0] _0583_;
  wire [4:0] _0584_;
  wire [4:0] _0585_;
  wire [4:0] _0586_;
  wire [4:0] _0587_;
  wire [4:0] _0588_;
  wire [4:0] _0589_;
  wire [4:0] _0590_;
  wire _0591_;
  wire [4:0] _0592_;
  wire [4:0] _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire [31:0] _0643_;
  wire [31:0] _0644_;
  wire [4:0] _0645_;
  wire [4:0] _0646_;
  wire _0647_;
  wire [4:0] _0648_;
  wire [4:0] _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire [7:0] _0666_;
  wire [7:0] _0667_;
  wire [7:0] _0668_;
  wire [7:0] _0669_;
  wire [7:0] _0670_;
  wire [7:0] _0671_;
  wire [7:0] _0672_;
  wire [7:0] _0673_;
  wire [7:0] _0674_;
  wire [7:0] _0675_;
  wire [7:0] _0676_;
  wire [7:0] _0677_;
  wire [7:0] _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire [1:0] _0692_;
  wire [1:0] _0693_;
  wire [1:0] _0694_;
  wire [1:0] _0695_;
  wire [1:0] _0696_;
  wire [1:0] _0697_;
  wire [1:0] _0698_;
  wire [31:0] _0699_;
  wire [31:0] _0700_;
  wire [31:0] _0701_;
  wire [31:0] _0702_;
  wire [31:0] _0703_;
  wire [31:0] _0704_;
  wire [31:0] _0705_;
  wire [31:0] _0706_;
  wire [31:0] _0707_;
  wire [31:0] _0708_;
  wire [31:0] _0709_;
  wire [31:0] _0710_;
  wire [31:0] _0711_;
  wire [31:0] _0712_;
  wire [31:0] _0713_;
  wire [31:0] _0714_;
  wire [63:0] _0715_;
  wire [63:0] _0716_;
  wire _0717_;
  wire _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  wire [3:0] _0729_;
  wire [31:0] _0730_;
  wire [31:0] _0731_;
  wire _0732_;
  wire [31:0] _0733_;
  wire [31:0] _0734_;
  wire [31:0] _0735_;
  wire [31:0] _0736_;
  wire [31:0] _0737_;
  wire [3:0] _0738_;
  wire [6:0] _0739_;
  wire [31:0] _0740_;
  wire [31:0] _0741_;
  wire [31:0] alu_add_sub;
  wire alu_eq;
  wire alu_lts;
  wire alu_ltu;
  wire [31:0] alu_out;
  wire alu_out_0;
  reg [31:0] alu_out_q;
  wire [31:0] alu_shr;
  wire clear_prefetched_high_word;
  reg clear_prefetched_high_word_q;
  input clk;
  reg compressed_instr;
  reg [63:0] count_cycle;
  reg [63:0] count_instr;
  reg [7:0] cpu_state;
  wire [31:0] cpuregs_rs1;
  wire [31:0] cpuregs_rs2;
  wire [31:0] cpuregs_wrdata;
  wire cpuregs_write;
  wire [31:0] dbg_mem_addr;
  wire dbg_mem_instr;
  wire [31:0] dbg_mem_rdata;
  wire dbg_mem_ready;
  wire dbg_mem_valid;
  wire [31:0] dbg_mem_wdata;
  wire [3:0] dbg_mem_wstrb;
  reg [31:0] decoded_imm;
  reg [31:0] decoded_imm_uj;
  reg [4:0] decoded_rd;
  reg [4:0] decoded_rs1;
  reg [4:0] decoded_rs2;
  reg decoder_pseudo_trigger;
  reg decoder_trigger;
  wire do_waitirq;
  output [31:0] eoi;
  reg [31:0] eoi;
  reg instr_add;
  reg instr_addi;
  reg instr_and;
  reg instr_andi;
  reg instr_auipc;
  reg instr_beq;
  reg instr_bge;
  reg instr_bgeu;
  reg instr_blt;
  reg instr_bltu;
  reg instr_bne;
  reg instr_getq;
  reg instr_jal;
  reg instr_jalr;
  reg instr_lb;
  reg instr_lbu;
  reg instr_lh;
  reg instr_lhu;
  reg instr_lui;
  reg instr_lw;
  reg instr_maskirq;
  reg instr_or;
  reg instr_ori;
  reg instr_rdcycle;
  reg instr_rdcycleh;
  reg instr_rdinstr;
  reg instr_rdinstrh;
  reg instr_retirq;
  reg instr_sb;
  reg instr_setq;
  reg instr_sh;
  reg instr_sll;
  reg instr_slli;
  reg instr_slt;
  reg instr_slti;
  reg instr_sltiu;
  reg instr_sltu;
  reg instr_sra;
  reg instr_srai;
  reg instr_srl;
  reg instr_srli;
  reg instr_sub;
  reg instr_sw;
  reg instr_timer;
  wire instr_trap;
  reg instr_waitirq;
  reg instr_xor;
  reg instr_xori;
  input [31:0] irq;
  reg [1:0] irq_state;
  reg is_alu_reg_imm;
  reg is_alu_reg_reg;
  reg is_beq_bne_blt_bge_bltu_bgeu;
  reg is_compare;
  reg is_jalr_addi_slti_sltiu_xori_ori_andi;
  reg is_lb_lh_lw_lbu_lhu;
  reg is_lbu_lhu_lw;
  reg is_lui_auipc_jal;
  reg is_lui_auipc_jal_jalr_addi_add_sub;
  wire is_rdcycle_rdcycleh_rdinstr_rdinstrh;
  reg is_sb_sh_sw;
  reg is_sll_srl_sra;
  reg is_slli_srli_srai;
  reg is_slti_blt_slt;
  reg last_mem_valid;
  reg latched_branch;
  reg latched_compr;
  reg latched_is_lh;
  reg latched_is_lu;
  reg [4:0] latched_rd;
  reg latched_stalu;
  reg latched_store;
  reg [15:0] mem_16bit_buffer;
  output [31:0] mem_addr;
  reg [31:0] mem_addr;
  reg mem_do_prefetch;
  reg mem_do_rdata;
  reg mem_do_rinst;
  reg mem_do_wdata;
  wire mem_done;
  output mem_instr;
  reg mem_instr;
  output [31:0] mem_la_addr;
  wire mem_la_firstword;
  reg mem_la_firstword_reg;
  wire mem_la_firstword_xfer;
  output mem_la_read;
  reg mem_la_secondword;
  wire mem_la_use_prefetched_high_word;
  output [31:0] mem_la_wdata;
  output mem_la_write;
  output [3:0] mem_la_wstrb;
  input [31:0] mem_rdata;
  wire [15:0] mem_rdata_latched;
  wire [31:0] mem_rdata_latched_noshuffle;
  reg [31:0] mem_rdata_q;
  wire [31:0] mem_rdata_word;
  input mem_ready;
  reg [1:0] mem_state;
  output mem_valid;
  reg mem_valid;
  output [31:0] mem_wdata;
  reg [31:0] mem_wdata;
  reg [1:0] mem_wordsize;
  output [3:0] mem_wstrb;
  reg [3:0] mem_wstrb;
  wire mem_xfer;
  wire [31:0] next_pc;
  output [31:0] pcpi_insn;
  input [31:0] pcpi_rd;
  input pcpi_ready;
  output [31:0] pcpi_rs1;
  output [31:0] pcpi_rs2;
  output pcpi_valid;
  reg pcpi_valid;
  input pcpi_wait;
  input pcpi_wr;
  reg prefetched_high_word;
  reg [31:0] reg_next_pc;
  reg [31:0] reg_op1;
  reg [31:0] reg_op2;
  reg [31:0] reg_out;
  reg [31:0] reg_pc;
  reg [4:0] reg_sh;
  input resetn;
  output [35:0] trace_data;
  reg [35:0] trace_data;
  output trace_valid;
  reg trace_valid;
  output trap;
  reg trap;
  assign _0123_ = reg_op1 + reg_op2;
  assign _0124_ = reg_pc + _0171_[2:0];
  assign _0125_ = count_cycle + 1'h1;
  assign _0126_ = _0115_ + _0172_[2:0];
  assign _0127_ = count_instr + 1'h1;
  assign _0128_ = _0115_ + decoded_imm_uj;
  assign _0129_ = reg_pc + decoded_imm;
  assign _0130_ = reg_op1 + decoded_imm;
  assign _0131_ = next_pc[31:2] + mem_la_firstword_xfer;
  assign _0132_ = 4'h8 + mem_rdata_latched[4:2];
  assign _0133_ = 4'h8 + mem_rdata_latched[9:7];
  assign _0134_ = reg_op1 & reg_op2;
  assign _0135_ = mem_la_wstrb & { mem_la_write, mem_la_write, mem_la_write, mem_la_write };
  always @(posedge clk)
      _0138_ <= _0137_;
  assign _0167_ = _0166_ ? _0139_ : 1'h0;
  assign _0166_ = _0136_ == _0008_;
  always @(posedge clk)
      _0142_ <= _0167_;
  assign _0168_ = _0142_ ? _0138_ : _0140_;
  assign _0144_ = | { _0409_, _0404_, _0400_, _0399_, _0393_ };
  assign _0143_ = | { _0400_, _0399_, _0393_ };
  assign _0145_ = | { _0404_, _0393_ };
  assign _0147_ = | { _0399_, _0393_ };
  assign _0146_ = | { _0400_, _0399_ };
  assign _0148_ = | { _0400_, _0393_ };
  assign _0149_ = | { _0409_, _0400_, _0399_ };
  assign _0150_ = | { _0622_, _0591_ };
  assign _0151_ = | { latched_branch, _0270_ };
  assign _0152_ = | { _0634_, _0633_, _0632_, _0631_, _0630_, _0629_, _0191_ };
  assign _0153_ = | { _0634_, _0633_, _0632_, _0631_, _0630_, _0191_ };
  assign _0154_ = | { _0634_, _0633_, _0632_, _0630_, _0191_ };
  assign _0155_ = | { _0634_, _0632_, _0629_, _0191_ };
  assign _0156_ = | { is_lui_auipc_jal, is_jalr_addi_slti_sltiu_xori_ori_andi, _0275_, _0276_, _0278_ };
  assign _0157_ = | { _0634_, _0633_, _0632_, _0631_, _0630_, _0629_ };
  assign _0158_ = | { _0634_, _0632_, _0629_ };
  assign _0160_ = | { _0275_, _0276_, _0279_ };
  assign _0161_ = | { _0634_, _0633_, _0632_, _0631_, _0630_ };
  assign _0159_ = | { is_lui_auipc_jal, is_jalr_addi_slti_sltiu_xori_ori_andi };
  assign _0162_ = | { _0275_, _0276_, _0278_, _0279_ };
  assign _0163_ = | { _0634_, _0632_, _0631_, _0191_ };
  assign _0164_ = | { _0275_, _0276_ };
  assign _0165_ = | { _0402_, _0412_ };
  assign _0174_ = mem_rdata_q[14:12] == 3'h4;
  assign _0175_ = mem_rdata_q[14:12] == 3'h5;
  assign _0176_ = ! mem_rdata_q[14:12];
  assign _0177_ = mem_rdata_q[14:12] == 1'h1;
  assign _0178_ = mem_rdata_q[14:12] == 2'h2;
  assign _0179_ = mem_rdata_q[14:12] == 2'h3;
  assign _0180_ = mem_rdata_q[14:12] == 3'h6;
  assign _0181_ = mem_rdata_q[14:12] == 3'h7;
  assign _0182_ = ! mem_rdata_q[31:25];
  assign _0183_ = mem_rdata_q[31:25] == 6'h20;
  assign _0184_ = mem_rdata_q[6:0] == 7'h73;
  assign _0185_ = mem_rdata_q[31:12] == 20'hc0002;
  assign _0186_ = mem_rdata_q[31:12] == 20'hc0102;
  assign _0187_ = mem_rdata_q[31:12] == 20'hc8002;
  assign _0188_ = mem_rdata_q[31:12] == 20'hc8102;
  assign _0189_ = mem_rdata_q[31:12] == 20'hc0202;
  assign _0190_ = mem_rdata_q[31:12] == 20'hc8202;
  assign alu_eq = reg_op1 == reg_op2;
  assign _0191_ = cpu_state == 7'h40;
  assign _0192_ = ! reg_sh;
  assign _0193_ = ! mem_wordsize;
  assign _0194_ = mem_wordsize == 1'h1;
  assign _0195_ = mem_rdata_latched[11:7] == 2'h2;
  assign _0196_ = ! mem_rdata_latched[11:10];
  assign _0197_ = mem_rdata_latched[11:10] == 1'h1;
  assign _0198_ = mem_rdata_latched[11:10] == 2'h2;
  assign _0199_ = mem_rdata_latched[12:10] == 2'h3;
  assign _0200_ = ! mem_rdata_latched[6:5];
  assign _0201_ = mem_rdata_latched[6:5] == 1'h1;
  assign _0202_ = mem_rdata_latched[6:5] == 2'h2;
  assign _0203_ = mem_rdata_latched[6:5] == 2'h3;
  assign _0204_ = ~ mem_rdata_latched[12];
  assign _0205_ = ! mem_rdata_latched[6:2];
  assign _0206_ = mem_rdata_latched[6:0] == 6'h37;
  assign _0207_ = mem_rdata_latched[6:0] == 5'h17;
  assign _0208_ = mem_rdata_latched[6:0] == 7'h6f;
  assign _0209_ = mem_rdata_latched[6:0] == 7'h67;
  assign _0210_ = mem_rdata_latched[6:0] == 7'h63;
  assign _0211_ = mem_rdata_latched[6:0] == 2'h3;
  assign _0212_ = mem_rdata_latched[6:0] == 6'h23;
  assign _0213_ = mem_rdata_latched[6:0] == 5'h13;
  assign _0214_ = mem_rdata_latched[6:0] == 6'h33;
  assign _0215_ = reg_sh >= 3'h4;
  assign _0216_ = is_lb_lh_lw_lbu_lhu && _0174_;
  assign _0217_ = is_lb_lh_lw_lbu_lhu && _0175_;
  assign _0218_ = is_sb_sh_sw && _0176_;
  assign _0219_ = is_sb_sh_sw && _0177_;
  assign _0220_ = is_sb_sh_sw && _0178_;
  assign _0221_ = is_alu_reg_imm && _0176_;
  assign _0222_ = is_alu_reg_imm && _0178_;
  assign _0223_ = is_alu_reg_imm && _0179_;
  assign _0224_ = is_alu_reg_imm && _0174_;
  assign _0225_ = is_alu_reg_imm && _0180_;
  assign _0226_ = is_alu_reg_imm && _0181_;
  assign _0227_ = is_alu_reg_imm && _0177_;
  assign _0228_ = _0227_ && _0182_;
  assign _0229_ = is_alu_reg_imm && _0175_;
  assign _0230_ = _0229_ && _0182_;
  assign _0231_ = _0229_ && _0183_;
  assign _0232_ = is_alu_reg_reg && _0176_;
  assign _0233_ = _0232_ && _0182_;
  assign _0234_ = _0232_ && _0183_;
  assign _0235_ = is_alu_reg_reg && _0177_;
  assign _0236_ = _0235_ && _0182_;
  assign _0237_ = is_alu_reg_reg && _0178_;
  assign _0238_ = _0237_ && _0182_;
  assign _0239_ = is_alu_reg_reg && _0179_;
  assign _0240_ = _0239_ && _0182_;
  assign _0241_ = is_alu_reg_reg && _0174_;
  assign _0242_ = _0241_ && _0182_;
  assign _0243_ = is_alu_reg_reg && _0175_;
  assign _0244_ = _0243_ && _0182_;
  assign _0245_ = _0243_ && _0183_;
  assign _0246_ = is_alu_reg_reg && _0180_;
  assign _0247_ = _0246_ && _0182_;
  assign _0248_ = is_alu_reg_reg && _0181_;
  assign _0249_ = _0248_ && _0182_;
  assign _0250_ = _0184_ && _0185_;
  assign _0251_ = _0184_ && _0186_;
  assign _0252_ = _0351_ && 1'h1;
  assign _0253_ = _0184_ && _0187_;
  assign _0254_ = _0184_ && _0188_;
  assign _0255_ = _0352_ && 1'h1;
  assign _0256_ = _0255_ && 1'h1;
  assign _0257_ = _0184_ && _0189_;
  assign _0258_ = _0257_ && 1'h1;
  assign _0259_ = _0184_ && _0190_;
  assign _0260_ = _0259_ && 1'h1;
  assign _0261_ = _0260_ && 1'h1;
  assign _0262_ = _0177_ && _0182_;
  assign _0263_ = _0175_ && _0182_;
  assign _0264_ = _0175_ && _0183_;
  assign _0265_ = is_alu_reg_imm && _0723_;
  assign _0266_ = is_alu_reg_imm && _0724_;
  assign _0267_ = is_alu_reg_reg && _0723_;
  assign _0268_ = latched_store && latched_branch;
  assign _0269_ = is_slti_blt_slt && 1'h1;
  assign _0270_ = latched_store && _0333_;
  assign _0271_ = resetn && cpuregs_write;
  assign _0272_ = mem_do_rinst && mem_done;
  assign _0273_ = _0334_ && _0335_;
  assign _0274_ = _0336_ && _0337_;
  assign _0275_ = 1'h1 && instr_trap;
  assign _0276_ = 1'h1 && is_rdcycle_rdcycleh_rdinstr_rdinstrh;
  assign _0277_ = instr_rdcycleh && 1'h1;
  assign _0278_ = is_lb_lh_lw_lbu_lhu && _0338_;
  assign _0279_ = is_slli_srli_srai && 1'h1;
  assign _0280_ = is_sll_srl_sra && 1'h1;
  assign _0281_ = 1'h1 && _0215_;
  assign _0282_ = _0339_ && mem_done;
  assign _0283_ = 1'h1 && resetn;
  assign _0284_ = _0283_ && _0365_;
  assign _0285_ = _0193_ && _0381_;
  assign _0286_ = _0194_ && reg_op1[0];
  assign _0287_ = _0283_ && mem_do_rinst;
  assign _0288_ = _0287_ && reg_pc[0];
  assign _0289_ = 1'h1 && _0367_;
  assign _0290_ = _0289_ && next_pc[1];
  assign mem_la_firstword = _0290_ && _0340_;
  assign _0291_ = 1'h1 && mem_xfer;
  assign mem_la_firstword_xfer = _0291_ && _0717_;
  assign _0292_ = 1'h1 && mem_la_firstword;
  assign _0293_ = _0292_ && prefetched_high_word;
  assign mem_la_use_prefetched_high_word = _0293_ && _0341_;
  assign _0294_ = mem_valid && mem_ready;
  assign _0295_ = mem_la_use_prefetched_high_word && mem_do_rinst;
  assign _0296_ = mem_xfer && _0725_;
  assign _0297_ = _0296_ && _0369_;
  assign _0298_ = _0718_ && mem_do_rinst;
  assign _0299_ = resetn && _0370_;
  assign _0300_ = _0343_ && mem_xfer;
  assign mem_done = _0299_ && _0371_;
  assign _0301_ = resetn && _0344_;
  assign mem_la_write = _0301_ && mem_do_wdata;
  assign _0302_ = _0345_ && _0344_;
  assign _0303_ = _0302_ && _0372_;
  assign _0304_ = mem_la_firstword_xfer && _0340_;
  assign _0305_ = _0304_ && _0719_;
  assign mem_la_read = resetn && _0373_;
  assign _0306_ = 1'h1 && mem_la_use_prefetched_high_word;
  assign _0307_ = 1'h1 && mem_la_secondword;
  assign _0308_ = mem_valid && _0346_;
  assign _0309_ = 1'h1 && mem_done;
  assign _0310_ = _0309_ && _0367_;
  assign _0311_ = _0204_ && _0205_;
  assign _0312_ = _0204_ && _0382_;
  assign _0313_ = mem_rdata_latched[12] && _0383_;
  assign _0314_ = _0313_ && _0205_;
  assign _0315_ = mem_rdata_latched[12] && _0382_;
  assign _0316_ = 1'h1 && mem_la_read;
  assign _0317_ = 1'h1 && _0347_;
  assign instr_trap = 1'h1 && _0349_;
  assign _0318_ = 1'h1 && _0384_;
  assign _0319_ = decoder_trigger && _0350_;
  assign _0320_ = is_beq_bne_blt_bge_bltu_bgeu && _0176_;
  assign _0321_ = is_beq_bne_blt_bge_bltu_bgeu && _0177_;
  assign _0322_ = is_beq_bne_blt_bge_bltu_bgeu && _0174_;
  assign _0323_ = is_beq_bne_blt_bge_bltu_bgeu && _0175_;
  assign _0324_ = is_beq_bne_blt_bge_bltu_bgeu && _0180_;
  assign _0325_ = is_beq_bne_blt_bge_bltu_bgeu && _0181_;
  assign _0326_ = is_lb_lh_lw_lbu_lhu && _0176_;
  assign _0327_ = is_lb_lh_lw_lbu_lhu && _0177_;
  assign _0328_ = is_lb_lh_lw_lbu_lhu && _0178_;
  assign _0329_ = ! alu_eq;
  assign _0330_ = ! alu_lts;
  assign _0331_ = ! alu_ltu;
  assign _0332_ = ! resetn;
  assign _0333_ = ! latched_branch;
  assign _0334_ = ! decoder_trigger;
  assign _0335_ = ! trace_valid;
  assign _0336_ = ! instr_jalr;
  assign _0337_ = ! instr_retirq;
  assign _0338_ = ! instr_trap;
  assign _0339_ = ! mem_do_prefetch;
  assign _0340_ = ! mem_la_secondword;
  assign _0341_ = ! clear_prefetched_high_word;
  assign _0342_ = ! mem_la_firstword;
  assign _0343_ = ! _0719_;
  assign _0344_ = ! mem_state;
  assign _0345_ = ! mem_la_use_prefetched_high_word;
  assign _0346_ = ! mem_ready;
  assign _0347_ = ! mem_do_rdata;
  assign _0348_ = ! _0720_;
  assign _0349_ = ! { instr_lui, instr_auipc, instr_jal, instr_jalr, instr_beq, instr_bne, instr_blt, instr_bge, instr_bltu, instr_bgeu, instr_lb, instr_lh, instr_lw, instr_lbu, instr_lhu, instr_sb, instr_sh, instr_sw, instr_addi, instr_slti, instr_sltiu, instr_xori, instr_ori, instr_andi, instr_slli, instr_srli, instr_srai, instr_add, instr_sub, instr_sll, instr_slt, instr_sltu, instr_xor, instr_srl, instr_sra, instr_or, instr_and, instr_rdcycle, instr_rdcycleh, instr_rdinstr, instr_rdinstrh, instr_getq, instr_setq, instr_retirq, instr_maskirq, instr_waitirq, instr_timer };
  assign _0350_ = ! decoder_pseudo_trigger;
  assign _0351_ = _0250_ || _0251_;
  assign _0352_ = _0253_ || _0254_;
  assign _0353_ = instr_jalr || _0266_;
  assign _0354_ = instr_sra || instr_srai;
  assign _0355_ = instr_xori || instr_xor;
  assign _0356_ = instr_ori || instr_or;
  assign _0357_ = instr_andi || instr_and;
  assign _0358_ = latched_branch || irq_state;
  assign _0359_ = _0358_ || _0332_;
  assign _0360_ = instr_slli || instr_sll;
  assign _0361_ = instr_srli || instr_srl;
  assign _0362_ = _0339_ || mem_done;
  assign _0363_ = instr_lb || instr_lbu;
  assign _0364_ = instr_lh || instr_lhu;
  assign _0365_ = mem_do_rdata || mem_do_wdata;
  assign _0366_ = _0332_ || mem_done;
  assign _0367_ = mem_do_prefetch || mem_do_rinst;
  assign mem_xfer = _0294_ || _0295_;
  assign _0368_ = mem_do_rinst || mem_do_rdata;
  assign _0369_ = _0368_ || mem_do_wdata;
  assign _0370_ = _0297_ || _0298_;
  assign _0371_ = _0342_ || _0300_;
  assign _0372_ = _0367_ || mem_do_rdata;
  assign _0373_ = _0303_ || _0305_;
  assign _0374_ = mem_xfer || 1'h0;
  assign _0375_ = _0332_ || trap;
  assign _0376_ = _0332_ || mem_ready;
  assign _0377_ = mem_la_read || mem_la_write;
  assign _0378_ = _0348_ || mem_la_secondword;
  assign alu_lts = $signed(reg_op1) < $signed(reg_op2);
  assign alu_ltu = reg_op1 < reg_op2;
  assign _0381_ = | reg_op1[1:0];
  assign _0382_ = | mem_rdata_latched[6:2];
  assign _0383_ = | mem_rdata_latched[11:7];
  assign _0384_ = mem_rdata_latched[1:0] != 2'h3;
  assign _0385_ = reg_op1 | reg_op2;
  always @(posedge clk)
      mem_rdata_q <= _0091_;
  always @(posedge clk)
      mem_valid <= _0093_;
  always @(posedge clk)
      mem_instr <= _0088_;
  always @(posedge clk)
      mem_addr <= _0083_;
  always @(posedge clk)
      mem_wdata <= _0094_;
  always @(posedge clk)
      mem_wstrb <= _0096_;
  always @(posedge clk)
      mem_state <= _0092_;
  always @(posedge clk)
      mem_la_secondword <= _0090_;
  always @(posedge clk)
      prefetched_high_word <= _0098_;
  always @(posedge clk)
      mem_16bit_buffer <= _0082_;
  always @(posedge clk)
      instr_lui <= _0031_;
  always @(posedge clk)
      instr_auipc <= _0017_;
  always @(posedge clk)
      instr_jal <= _0025_;
  always @(posedge clk)
      instr_jalr <= _0026_;
  always @(posedge clk)
      instr_beq <= _0018_;
  always @(posedge clk)
      instr_bne <= _0023_;
  always @(posedge clk)
      instr_blt <= _0021_;
  always @(posedge clk)
      instr_bge <= _0019_;
  always @(posedge clk)
      instr_bltu <= _0022_;
  always @(posedge clk)
      instr_bgeu <= _0020_;
  always @(posedge clk)
      instr_lb <= _0027_;
  always @(posedge clk)
      instr_lh <= _0029_;
  always @(posedge clk)
      instr_lw <= _0032_;
  always @(posedge clk)
      instr_lbu <= _0028_;
  always @(posedge clk)
      instr_lhu <= _0030_;
  always @(posedge clk)
      instr_sb <= _0041_;
  always @(posedge clk)
      instr_sh <= _0043_;
  always @(posedge clk)
      instr_sw <= _0055_;
  always @(posedge clk)
      instr_addi <= _0014_;
  always @(posedge clk)
      instr_slti <= _0047_;
  always @(posedge clk)
      instr_sltiu <= _0048_;
  always @(posedge clk)
      instr_xori <= _0059_;
  always @(posedge clk)
      instr_ori <= _0035_;
  always @(posedge clk)
      instr_andi <= _0016_;
  always @(posedge clk)
      instr_slli <= _0045_;
  always @(posedge clk)
      instr_srli <= _0053_;
  always @(posedge clk)
      instr_srai <= _0051_;
  always @(posedge clk)
      instr_add <= _0013_;
  always @(posedge clk)
      instr_sub <= _0054_;
  always @(posedge clk)
      instr_sll <= _0044_;
  always @(posedge clk)
      instr_slt <= _0046_;
  always @(posedge clk)
      instr_sltu <= _0049_;
  always @(posedge clk)
      instr_xor <= _0058_;
  always @(posedge clk)
      instr_srl <= _0052_;
  always @(posedge clk)
      instr_sra <= _0050_;
  always @(posedge clk)
      instr_or <= _0034_;
  always @(posedge clk)
      instr_and <= _0015_;
  always @(posedge clk)
      instr_rdcycle <= _0036_;
  always @(posedge clk)
      instr_rdcycleh <= _0037_;
  always @(posedge clk)
      instr_rdinstr <= _0038_;
  always @(posedge clk)
      instr_rdinstrh <= _0039_;
  always @(posedge clk)
      instr_getq <= _0024_;
  always @(posedge clk)
      instr_setq <= _0042_;
  always @(posedge clk)
      instr_retirq <= _0040_;
  always @(posedge clk)
      instr_maskirq <= _0033_;
  always @(posedge clk)
      instr_waitirq <= _0057_;
  always @(posedge clk)
      instr_timer <= _0056_;
  always @(posedge clk)
      decoded_rd <= _0007_;
  always @(posedge clk)
      decoded_rs1 <= _0008_;
  always @(posedge clk)
      decoded_rs2 <= _0009_;
  always @(posedge clk)
      decoded_imm <= _0005_;
  always @(posedge clk)
      decoded_imm_uj <= _0006_;
  always @(posedge clk)
      compressed_instr <= _0001_;
  always @(posedge clk)
      is_lui_auipc_jal <= _0068_;
  always @(posedge clk)
      is_lb_lh_lw_lbu_lhu <= _0066_;
  always @(posedge clk)
      is_slli_srli_srai <= _0072_;
  always @(posedge clk)
      is_jalr_addi_slti_sltiu_xori_ori_andi <= _0065_;
  always @(posedge clk)
      is_sb_sh_sw <= _0070_;
  always @(posedge clk)
      is_sll_srl_sra <= _0071_;
  always @(posedge clk)
      is_lui_auipc_jal_jalr_addi_add_sub <= _0069_;
  always @(posedge clk)
      is_slti_blt_slt <= _0073_;
  always @(posedge clk)
      is_beq_bne_blt_bge_bltu_bgeu <= _0063_;
  always @(posedge clk)
      is_lbu_lhu_lw <= _0067_;
  always @(posedge clk)
      is_alu_reg_imm <= _0061_;
  always @(posedge clk)
      is_alu_reg_reg <= _0062_;
  always @(posedge clk)
      is_compare <= _0064_;
  always @(posedge clk)
      clear_prefetched_high_word_q <= clear_prefetched_high_word;
  always @(posedge clk)
      trap <= _0108_;
  always @(posedge clk)
      pcpi_valid <= _0097_;
  always @(posedge clk)
      eoi <= _0012_;
  always @(posedge clk)
      trace_valid <= 1'h0;
  always @(posedge clk)
      trace_data <= 36'h0xxxxxxxx;
  always @(posedge clk)
      count_cycle <= _0002_;
  always @(posedge clk)
      count_instr <= _0003_;
  always @(posedge clk)
      reg_pc <= _0103_;
  always @(posedge clk)
      reg_next_pc <= _0099_;
  always @(posedge clk)
      reg_op1 <= _0100_;
  always @(posedge clk)
      reg_op2 <= _0101_;
  always @(posedge clk)
      reg_out <= _0102_;
  always @(posedge clk)
      reg_sh <= _0104_;
  always @(posedge clk)
      mem_wordsize <= _0095_;
  always @(posedge clk)
      mem_do_prefetch <= _0084_;
  always @(posedge clk)
      mem_do_rinst <= _0086_;
  always @(posedge clk)
      mem_do_rdata <= _0085_;
  always @(posedge clk)
      mem_do_wdata <= _0087_;
  always @(posedge clk)
      decoder_trigger <= _0011_;
  always @(posedge clk)
      decoder_pseudo_trigger <= _0010_;
  always @(posedge clk)
      cpu_state <= _0004_;
  always @(posedge clk)
      irq_state <= _0060_;
  always @(posedge clk)
      latched_store <= _0081_;
  always @(posedge clk)
      latched_stalu <= _0080_;
  always @(posedge clk)
      latched_branch <= _0075_;
  always @(posedge clk)
      latched_compr <= _0076_;
  always @(posedge clk)
      latched_is_lu <= _0078_;
  always @(posedge clk)
      latched_is_lh <= _0077_;
  always @(posedge clk)
      latched_rd <= _0079_;
  always @(posedge clk)
      alu_out_q <= alu_out;
  always @(posedge clk)
      mem_la_firstword_reg <= _0089_;
  always @(posedge clk)
      last_mem_valid <= _0074_;
  function [7:0] _1113_;
    input [7:0] a;
    input [31:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1113_ = b[7:0];
      4'b??1?:
        _1113_ = b[15:8];
      4'b?1??:
        _1113_ = b[23:16];
      4'b1???:
        _1113_ = b[31:24];
      default:
        _1113_ = a;
    endcase
  endfunction
  assign _0116_ = _1113_(8'hxx, { mem_rdata[7:0], mem_rdata[15:8], mem_rdata[23:16], mem_rdata[31:24] }, { _0389_, _0388_, _0387_, _0386_ });
  assign _0386_ = reg_op1[1:0] == 2'h3;
  assign _0387_ = reg_op1[1:0] == 2'h2;
  assign _0388_ = reg_op1[1:0] == 1'h1;
  assign _0389_ = ! reg_op1[1:0];
  function [15:0] _1118_;
    input [15:0] a;
    input [31:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1118_ = b[15:0];
      2'b1?:
        _1118_ = b[31:16];
      default:
        _1118_ = a;
    endcase
  endfunction
  assign _0111_ = _1118_(16'hxxxx, { mem_rdata[15:0], mem_rdata[31:16] }, { _0390_, reg_op1[1] });
  assign _0390_ = ~ reg_op1[1];
  function [31:0] _1120_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1120_ = b[31:0];
      2'b1?:
        _1120_ = b[63:32];
      default:
        _1120_ = a;
    endcase
  endfunction
  assign mem_rdata_word = _1120_({ 24'h000000, _0116_ }, { mem_rdata, 16'h0000, _0111_ }, { _0193_, _0194_ });
  function [3:0] _1121_;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1121_ = b[3:0];
      2'b1?:
        _1121_ = b[7:4];
      default:
        _1121_ = a;
    endcase
  endfunction
  assign mem_la_wstrb = _1121_(_0729_, { 4'hf, _0738_ }, { _0193_, _0194_ });
  function [31:0] _1122_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1122_ = b[31:0];
      2'b1?:
        _1122_ = b[63:32];
      default:
        _1122_ = a;
    endcase
  endfunction
  assign mem_la_wdata = _1122_({ reg_op2[7:0], reg_op2[7:0], reg_op2[7:0], reg_op2[7:0] }, { reg_op2, reg_op2[15:0], reg_op2[15:0] }, { _0193_, _0194_ });
  assign _0391_ = mem_xfer ? _0173_[31] : mem_rdata_q[31];
  function [0:0] _1124_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1124_ = b[0:0];
      2'b1?:
        _1124_ = b[1:1];
      default:
        _1124_ = a;
    endcase
  endfunction
  assign _0392_ = _1124_(_0391_, { _0397_, 1'h0 }, { _0398_, _0143_ });
  assign _0393_ = mem_rdata_latched[15:13] == 3'h6;
  assign _0394_ = _0311_ ? 1'h0 : _0391_;
  assign _0395_ = _0312_ ? 1'h0 : _0394_;
  assign _0396_ = _0314_ ? 1'h0 : _0395_;
  assign _0397_ = _0315_ ? 1'h0 : _0396_;
  assign _0398_ = mem_rdata_latched[15:13] == 3'h4;
  assign _0399_ = mem_rdata_latched[15:13] == 2'h2;
  assign _0400_ = ! mem_rdata_latched[15:13];
  function [0:0] _1133_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1133_ = b[0:0];
      3'b?1?:
        _1133_ = b[1:1];
      3'b1??:
        _1133_ = b[2:2];
      default:
        _1133_ = a;
    endcase
  endfunction
  assign _0401_ = _1133_(_0391_, { _0411_, _0403_, _0392_ }, { _0412_, _0410_, _0402_ });
  assign _0402_ = mem_rdata_latched[1:0] == 2'h2;
  function [0:0] _1135_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1135_ = b[0:0];
      2'b1?:
        _1135_ = b[1:1];
      default:
        _1135_ = a;
    endcase
  endfunction
  assign _0403_ = _1135_(_0391_, { _0408_, mem_rdata_latched[12] }, { _0398_, _0144_ });
  assign _0404_ = mem_rdata_latched[15:13] == 3'h7;
  assign _0405_ = _0196_ ? 1'h0 : _0391_;
  assign _0406_ = _0197_ ? 1'h0 : _0405_;
  assign _0407_ = _0198_ ? mem_rdata_latched[12] : _0406_;
  assign _0408_ = _0199_ ? 1'h0 : _0407_;
  assign _0409_ = mem_rdata_latched[15:13] == 2'h3;
  assign _0410_ = mem_rdata_latched[1:0] == 1'h1;
  assign _0411_ = _0143_ ? 1'h0 : _0391_;
  assign _0412_ = ! mem_rdata_latched[1:0];
  assign _0091_[31] = _0310_ ? _0401_ : _0391_;
  assign _0413_ = mem_xfer ? mem_rdata_latched[7] : mem_rdata_q[7];
  assign _0414_ = _0393_ ? 1'h0 : _0413_;
  function [0:0] _1148_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1148_ = b[0:0];
      2'b1?:
        _1148_ = b[1:1];
      default:
        _1148_ = a;
    endcase
  endfunction
  assign _0415_ = _1148_(_0413_, { _0416_, _0414_ }, { _0410_, _0165_ });
  assign _0416_ = _0145_ ? mem_rdata_latched[12] : _0413_;
  assign _0091_[7] = _0310_ ? _0415_ : _0413_;
  assign _0417_ = mem_xfer ? _0173_[24:20] : mem_rdata_q[24:20];
  assign _0418_ = _0311_ ? 5'h00 : _0417_;
  assign _0419_ = _0314_ ? 5'h00 : _0418_;
  function [4:0] _1154_;
    input [4:0] a;
    input [9:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1154_ = b[4:0];
      2'b1?:
        _1154_ = b[9:5];
      default:
        _1154_ = a;
    endcase
  endfunction
  assign _0420_ = _1154_(_0417_, { mem_rdata_latched[6:4], 2'h0, _0419_ }, { _0399_, _0398_ });
  function [4:0] _1155_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1155_ = b[4:0];
      3'b?1?:
        _1155_ = b[9:5];
      3'b1??:
        _1155_ = b[14:10];
      default:
        _1155_ = a;
    endcase
  endfunction
  assign _0421_ = _1155_(_0417_, { _0425_, _0423_, _0420_ }, { _0412_, _0410_, _0402_ });
  assign _0422_ = _0198_ ? mem_rdata_latched[6:2] : _0417_;
  function [4:0] _1157_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1157_ = b[4:0];
      3'b?1?:
        _1157_ = b[9:5];
      3'b1??:
        _1157_ = b[14:10];
      default:
        _1157_ = a;
    endcase
  endfunction
  assign _0423_ = _1157_(_0417_, { mem_rdata_latched[6:2], _0424_, _0422_ }, { _0146_, _0409_, _0398_ });
  assign _0424_ = _0195_ ? { mem_rdata_latched[6], 4'h0 } : { mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12] };
  function [4:0] _1159_;
    input [4:0] a;
    input [9:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1159_ = b[4:0];
      2'b1?:
        _1159_ = b[9:5];
      default:
        _1159_ = a;
    endcase
  endfunction
  assign _0425_ = _1159_(_0417_, { mem_rdata_latched[11], mem_rdata_latched[5], mem_rdata_latched[6], 2'h0, mem_rdata_latched[11:10], mem_rdata_latched[6], 2'h0 }, { _0400_, _0399_ });
  assign _0091_[24:20] = _0310_ ? _0421_ : _0417_;
  assign _0426_ = mem_xfer ? { _0173_[19:16], mem_rdata_latched[15] } : mem_rdata_q[19:15];
  assign _0427_ = _0195_ ? _0426_ : { mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[6:5] };
  assign _0428_ = _0409_ ? _0427_ : _0426_;
  assign _0429_ = _0410_ ? _0428_ : _0426_;
  assign _0091_[19:15] = _0310_ ? _0429_ : _0426_;
  assign _0091_[6:0] = mem_xfer ? mem_rdata_latched[6:0] : mem_rdata_q[6:0];
  assign _0430_ = mem_xfer ? mem_rdata_latched[14:12] : mem_rdata_q[14:12];
  function [2:0] _1168_;
    input [2:0] a;
    input [8:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1168_ = b[2:0];
      3'b?1?:
        _1168_ = b[5:3];
      3'b1??:
        _1168_ = b[8:6];
      default:
        _1168_ = a;
    endcase
  endfunction
  assign _0431_ = _1168_(_0430_, { 3'h1, _0435_, 3'h2 }, { _0400_, _0398_, _0147_ });
  assign _0432_ = _0311_ ? 3'h0 : _0430_;
  assign _0433_ = _0312_ ? 3'h0 : _0432_;
  assign _0434_ = _0314_ ? 3'h0 : _0433_;
  assign _0435_ = _0315_ ? 3'h0 : _0434_;
  function [2:0] _1173_;
    input [2:0] a;
    input [8:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1173_ = b[2:0];
      3'b?1?:
        _1173_ = b[5:3];
      3'b1??:
        _1173_ = b[8:6];
      default:
        _1173_ = a;
    endcase
  endfunction
  assign _0436_ = _1173_(_0430_, { _0447_, _0437_, _0431_ }, { _0412_, _0410_, _0402_ });
  function [2:0] _1174_;
    input [2:0] a;
    input [11:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1174_ = b[2:0];
      4'b??1?:
        _1174_ = b[5:3];
      4'b?1??:
        _1174_ = b[8:6];
      4'b1???:
        _1174_ = b[11:9];
      default:
        _1174_ = a;
    endcase
  endfunction
  assign _0437_ = _1174_(_0430_, { _0446_, _0445_, 6'h01 }, { _0409_, _0398_, _0143_, _0404_ });
  assign _0438_ = _0196_ ? 3'h5 : _0430_;
  assign _0439_ = _0197_ ? 3'h5 : _0438_;
  assign _0440_ = _0198_ ? 3'h7 : _0439_;
  assign _0441_ = _0200_ ? 3'h0 : _0440_;
  assign _0442_ = _0201_ ? 3'h4 : _0441_;
  assign _0443_ = _0202_ ? 3'h6 : _0442_;
  assign _0444_ = _0203_ ? 3'h7 : _0443_;
  assign _0445_ = _0199_ ? _0444_ : _0440_;
  assign _0446_ = _0195_ ? 3'h0 : mem_rdata_latched[4:2];
  function [2:0] _1184_;
    input [2:0] a;
    input [5:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1184_ = b[2:0];
      2'b1?:
        _1184_ = b[5:3];
      default:
        _1184_ = a;
    endcase
  endfunction
  assign _0447_ = _1184_(_0430_, 6'h02, { _0400_, _0147_ });
  assign _0091_[14:12] = _0310_ ? _0436_ : _0430_;
  assign _0448_ = mem_xfer ? mem_rdata_latched[11:8] : mem_rdata_q[11:8];
  assign _0449_ = _0393_ ? { mem_rdata_latched[11:9], 1'h0 } : _0448_;
  function [3:0] _1188_;
    input [3:0] a;
    input [11:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1188_ = b[3:0];
      3'b?1?:
        _1188_ = b[7:4];
      3'b1??:
        _1188_ = b[11:8];
      default:
        _1188_ = a;
    endcase
  endfunction
  assign _0450_ = _1188_(_0448_, { _0452_, _0451_, _0449_ }, { _0412_, _0410_, _0402_ });
  assign _0451_ = _0145_ ? { mem_rdata_latched[11:10], mem_rdata_latched[4:3] } : _0448_;
  assign _0452_ = _0393_ ? { mem_rdata_latched[11:10], mem_rdata_latched[6], 1'h0 } : _0448_;
  assign _0091_[11:8] = _0310_ ? _0450_ : _0448_;
  assign _0453_ = mem_xfer ? _0173_[30:25] : mem_rdata_q[30:25];
  function [5:0] _1193_;
    input [5:0] a;
    input [23:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1193_ = b[5:0];
      4'b??1?:
        _1193_ = b[11:6];
      4'b?1??:
        _1193_ = b[17:12];
      4'b1???:
        _1193_ = b[23:18];
      default:
        _1193_ = a;
    endcase
  endfunction
  assign _0454_ = _1193_(_0453_, { 9'h000, mem_rdata_latched[3:2], mem_rdata_latched[12], _0458_, 3'h0, mem_rdata_latched[8:7], mem_rdata_latched[12] }, { _0400_, _0399_, _0398_, _0393_ });
  assign _0455_ = _0311_ ? 6'h00 : _0453_;
  assign _0456_ = _0312_ ? 6'h00 : _0455_;
  assign _0457_ = _0314_ ? 6'h00 : _0456_;
  assign _0458_ = _0315_ ? 6'h00 : _0457_;
  function [5:0] _1198_;
    input [5:0] a;
    input [17:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1198_ = b[5:0];
      3'b?1?:
        _1198_ = b[11:6];
      3'b1??:
        _1198_ = b[17:12];
      default:
        _1198_ = a;
    endcase
  endfunction
  assign _0459_ = _1198_(_0453_, { _0466_, _0460_, _0454_ }, { _0412_, _0410_, _0402_ });
  function [5:0] _1199_;
    input [5:0] a;
    input [23:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1199_ = b[5:0];
      4'b??1?:
        _1199_ = b[11:6];
      4'b?1??:
        _1199_ = b[17:12];
      4'b1???:
        _1199_ = b[23:18];
      default:
        _1199_ = a;
    endcase
  endfunction
  assign _0460_ = _1199_(_0453_, { mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], _0465_[3:0], _0464_, mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[6:5], mem_rdata_latched[2] }, { _0146_, _0409_, _0398_, _0145_ });
  assign _0461_ = _0196_ ? 6'h00 : _0453_;
  assign _0462_ = _0197_ ? 6'h20 : _0461_;
  assign _0463_ = _0198_ ? { mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12] } : _0462_;
  assign _0464_ = _0199_ ? _0739_[5:0] : _0463_;
  assign _0465_[3:0] = _0195_ ? { mem_rdata_latched[4:3], mem_rdata_latched[5], mem_rdata_latched[2] } : { mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12] };
  function [5:0] _1205_;
    input [5:0] a;
    input [11:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1205_ = b[5:0];
      2'b1?:
        _1205_ = b[11:6];
      default:
        _1205_ = a;
    endcase
  endfunction
  assign _0466_ = _1205_(_0453_, { 1'h0, mem_rdata_latched[10:7], mem_rdata_latched[12], 4'h0, mem_rdata_latched[5], mem_rdata_latched[12] }, { _0400_, _0147_ });
  assign _0091_[30:25] = _0310_ ? _0459_ : _0453_;
  assign _0467_ = _0378_ ? mem_rdata[31:16] : mem_16bit_buffer;
  assign _0468_ = _0317_ ? _0467_ : mem_16bit_buffer;
  assign _0469_ = mem_la_use_prefetched_high_word ? mem_16bit_buffer : mem_rdata[31:16];
  assign _0470_ = _0316_ ? _0469_ : _0468_;
  assign _0471_ = mem_xfer ? _0470_ : mem_16bit_buffer;
  assign _0472_ = _0473_ ? _0471_ : mem_16bit_buffer;
  assign _0473_ = mem_state == 1'h1;
  assign _0082_ = _0375_ ? mem_16bit_buffer : _0472_;
  assign _0474_ = _0378_ ? 1'h1 : 1'h0;
  assign _0475_ = _0317_ ? _0474_ : prefetched_high_word;
  assign _0476_ = _0316_ ? prefetched_high_word : _0475_;
  assign _0477_ = mem_xfer ? _0476_ : prefetched_high_word;
  assign _0478_ = _0473_ ? _0477_ : prefetched_high_word;
  assign _0479_ = _0375_ ? 1'h0 : _0478_;
  assign _0098_ = clear_prefetched_high_word ? 1'h0 : _0479_;
  assign _0480_ = _0316_ ? 1'h1 : 1'h0;
  assign _0481_ = mem_xfer ? _0480_ : mem_la_secondword;
  assign _0482_ = _0473_ ? _0481_ : mem_la_secondword;
  assign _0090_ = _0375_ ? 1'h0 : _0482_;
  assign _0483_ = mem_do_rinst ? 2'h0 : mem_state;
  function [1:0] _1227_;
    input [1:0] a;
    input [7:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1227_ = b[1:0];
      4'b??1?:
        _1227_ = b[3:2];
      4'b?1??:
        _1227_ = b[5:4];
      4'b1???:
        _1227_ = b[7:6];
      default:
        _1227_ = a;
    endcase
  endfunction
  assign _0484_ = _1227_(mem_state, { _0491_, _0489_, _0486_, _0483_ }, { _0344_, _0473_, _0487_, _0485_ });
  assign _0485_ = mem_state == 2'h3;
  assign _0486_ = mem_xfer ? 2'h0 : mem_state;
  assign _0487_ = mem_state == 2'h2;
  assign _0488_ = _0316_ ? mem_state : _0740_[1:0];
  assign _0489_ = mem_xfer ? _0488_ : mem_state;
  assign _0490_ = _0372_ ? 2'h1 : mem_state;
  assign _0491_ = mem_do_wdata ? 2'h2 : _0490_;
  assign _0492_ = resetn ? mem_state : 2'h0;
  assign _0092_ = _0375_ ? _0492_ : _0484_;
  assign _0493_ = _0377_ ? _0135_ : mem_wstrb;
  assign _0494_ = _0372_ ? 4'h0 : _0493_;
  assign _0495_ = _0344_ ? _0494_ : _0493_;
  assign _0096_ = _0375_ ? mem_wstrb : _0495_;
  assign _0496_ = mem_la_write ? mem_la_wdata : mem_wdata;
  assign _0094_ = _0375_ ? mem_wdata : _0496_;
  assign _0497_ = _0377_ ? mem_la_addr : mem_addr;
  assign _0083_ = _0375_ ? mem_addr : _0497_;
  assign _0498_ = _0372_ ? _0367_ : mem_instr;
  assign _0499_ = mem_do_wdata ? 1'h0 : _0498_;
  assign _0500_ = _0344_ ? _0499_ : mem_instr;
  assign _0088_ = _0375_ ? mem_instr : _0500_;
  assign _0501_ = mem_xfer ? 1'h0 : mem_valid;
  function [0:0] _1250_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1250_ = b[0:0];
      3'b?1?:
        _1250_ = b[1:1];
      3'b1??:
        _1250_ = b[2:2];
      default:
        _1250_ = a;
    endcase
  endfunction
  assign _0502_ = _1250_(mem_valid, { _0505_, _0503_, _0501_ }, { _0344_, _0473_, _0487_ });
  assign _0503_ = mem_xfer ? _0480_ : mem_valid;
  assign _0504_ = _0372_ ? _0345_ : mem_valid;
  assign _0505_ = mem_do_wdata ? 1'h1 : _0504_;
  assign _0506_ = _0376_ ? 1'h0 : mem_valid;
  assign _0093_ = _0375_ ? _0506_ : _0502_;
  assign _0507_ = _0311_ ? mem_rdata_latched[11] : 1'h0;
  assign _0508_ = _0312_ ? 1'h0 : _0507_;
  assign _0509_ = _0314_ ? mem_rdata_latched[11] : _0508_;
  assign _0510_ = _0315_ ? mem_rdata_latched[11] : _0509_;
  function [0:0] _1260_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1260_ = b[0:0];
      2'b1?:
        _1260_ = b[1:1];
      default:
        _1260_ = a;
    endcase
  endfunction
  assign _0511_ = _1260_(1'h0, { mem_rdata_latched[11], _0510_ }, { _0400_, _0398_ });
  function [0:0] _1261_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1261_ = b[0:0];
      3'b?1?:
        _1261_ = b[1:1];
      3'b1??:
        _1261_ = b[2:2];
      default:
        _1261_ = a;
    endcase
  endfunction
  assign _0512_ = _1261_(1'h0, { _0518_, _0513_, _0511_ }, { _0412_, _0410_, _0402_ });
  function [0:0] _1262_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1262_ = b[0:0];
      4'b??1?:
        _1262_ = b[1:1];
      4'b?1??:
        _1262_ = b[2:2];
      4'b1???:
        _1262_ = b[3:3];
      default:
        _1262_ = a;
    endcase
  endfunction
  assign _0513_ = _1262_(1'h0, { mem_rdata_latched[11], _0517_, _0516_, _0133_[4] }, { _0400_, _0409_, _0398_, _0145_ });
  assign _0514_ = mem_rdata_latched[11] ? 1'h0 : _0133_[4];
  assign _0515_ = _0198_ ? _0133_[4] : _0514_;
  assign _0516_ = _0199_ ? _0133_[4] : _0515_;
  assign _0517_ = _0195_ ? mem_rdata_latched[11] : 1'h0;
  assign _0518_ = _0147_ ? _0133_[4] : 1'h0;
  assign _0519_ = _0318_ ? _0512_ : _0173_[19];
  assign _0008_[4] = _0272_ ? _0519_ : decoded_rs1[4];
  assign _0520_ = _0318_ ? mem_rdata_latched[8] : _0173_[30];
  assign _0006_[10] = _0272_ ? _0520_ : decoded_imm_uj[10];
  assign _0521_ = _0318_ ? mem_rdata_latched[6] : _0173_[27];
  assign _0006_[7] = _0272_ ? _0521_ : decoded_imm_uj[7];
  assign _0522_ = _0318_ ? mem_rdata_latched[7] : _0173_[26];
  assign _0006_[6] = _0272_ ? _0522_ : decoded_imm_uj[6];
  assign _0523_ = _0318_ ? mem_rdata_latched[5:3] : _0173_[23:21];
  assign _0006_[3:1] = _0272_ ? _0523_ : decoded_imm_uj[3:1];
  assign _0524_ = _0318_ ? mem_rdata_latched[2] : _0173_[25];
  assign _0006_[5] = _0272_ ? _0524_ : decoded_imm_uj[5];
  assign _0525_ = _0318_ ? mem_rdata_latched[10:9] : _0173_[29:28];
  assign _0006_[9:8] = _0272_ ? _0525_ : decoded_imm_uj[9:8];
  assign _0526_ = _0318_ ? { mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12] } : { _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31], _0173_[31] };
  assign _0006_[31:20] = _0272_ ? _0526_ : decoded_imm_uj[31:20];
  assign _0527_ = _0318_ ? mem_rdata_latched[11] : _0173_[24];
  assign _0006_[4] = _0272_ ? _0527_ : decoded_imm_uj[4];
  assign _0528_ = _0318_ ? mem_rdata_latched[12] : _0173_[20];
  assign _0006_[11] = _0272_ ? _0528_ : decoded_imm_uj[11];
  assign _0006_[0] = _0272_ ? 1'h0 : decoded_imm_uj[0];
  function [3:0] _1289_;
    input [3:0] a;
    input [11:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1289_ = b[3:0];
      3'b?1?:
        _1289_ = b[7:4];
      3'b1??:
        _1289_ = b[11:8];
      default:
        _1289_ = a;
    endcase
  endfunction
  assign _0529_ = _1289_(4'h0, { mem_rdata_latched[10:7], _0533_, 4'h2 }, { _0400_, _0398_, _0147_ });
  assign _0530_ = _0311_ ? mem_rdata_latched[10:7] : 4'h0;
  assign _0531_ = _0312_ ? 4'h0 : _0530_;
  assign _0532_ = _0314_ ? mem_rdata_latched[10:7] : _0531_;
  assign _0533_ = _0315_ ? mem_rdata_latched[10:7] : _0532_;
  function [3:0] _1294_;
    input [3:0] a;
    input [11:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1294_ = b[3:0];
      3'b?1?:
        _1294_ = b[7:4];
      3'b1??:
        _1294_ = b[11:8];
      default:
        _1294_ = a;
    endcase
  endfunction
  assign _0534_ = _1294_(4'h0, { _0540_, _0535_, _0529_ }, { _0412_, _0410_, _0402_ });
  function [3:0] _1295_;
    input [3:0] a;
    input [15:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1295_ = b[3:0];
      4'b??1?:
        _1295_ = b[7:4];
      4'b?1??:
        _1295_ = b[11:8];
      4'b1???:
        _1295_ = b[15:12];
      default:
        _1295_ = a;
    endcase
  endfunction
  assign _0535_ = _1295_(4'h0, { mem_rdata_latched[10:7], _0539_, _0538_, _0133_[3:0] }, { _0400_, _0409_, _0398_, _0145_ });
  assign _0536_ = mem_rdata_latched[11] ? 4'h0 : _0133_[3:0];
  assign _0537_ = _0198_ ? _0133_[3:0] : _0536_;
  assign _0538_ = _0199_ ? _0133_[3:0] : _0537_;
  assign _0539_ = _0195_ ? mem_rdata_latched[10:7] : 4'h0;
  function [3:0] _1300_;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1300_ = b[3:0];
      2'b1?:
        _1300_ = b[7:4];
      default:
        _1300_ = a;
    endcase
  endfunction
  assign _0540_ = _1300_(4'h0, { 4'h2, _0133_[3:0] }, { _0400_, _0147_ });
  assign _0541_ = _0318_ ? _0534_ : { _0173_[18:16], mem_rdata_latched[15] };
  assign _0008_[3:0] = _0272_ ? _0541_ : decoded_rs1[3:0];
  assign _0069_ = _0319_ ? 1'h0 : _0726_;
  assign _0542_ = _0312_ ? 1'h1 : _0214_;
  assign _0543_ = _0315_ ? 1'h1 : _0542_;
  assign _0544_ = _0398_ ? _0543_ : _0214_;
  function [0:0] _1307_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1307_ = b[0:0];
      2'b1?:
        _1307_ = b[1:1];
      default:
        _1307_ = a;
    endcase
  endfunction
  assign _0545_ = _1307_(_0214_, { _0547_, _0544_ }, { _0410_, _0402_ });
  assign _0546_ = _0199_ ? 1'h1 : _0214_;
  assign _0547_ = _0398_ ? _0546_ : _0214_;
  assign _0548_ = _0318_ ? _0545_ : _0214_;
  assign _0062_ = _0272_ ? _0548_ : is_alu_reg_reg;
  assign _0549_ = _0400_ ? 1'h1 : _0213_;
  function [0:0] _1313_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1313_ = b[0:0];
      3'b?1?:
        _1313_ = b[1:1];
      3'b1??:
        _1313_ = b[2:2];
      default:
        _1313_ = a;
    endcase
  endfunction
  assign _0550_ = _1313_(_0213_, { _0555_, _0553_, _0549_ }, { _0412_, _0410_, _0402_ });
  assign _0551_ = mem_rdata_latched[11] ? _0213_ : 1'h1;
  assign _0552_ = _0198_ ? 1'h1 : _0551_;
  function [0:0] _1316_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1316_ = b[0:0];
      3'b?1?:
        _1316_ = b[1:1];
      3'b1??:
        _1316_ = b[2:2];
      default:
        _1316_ = a;
    endcase
  endfunction
  assign _0553_ = _1316_(_0213_, { 1'h1, _0554_, _0552_ }, { _0146_, _0409_, _0398_ });
  assign _0554_ = _0195_ ? 1'h1 : _0213_;
  assign _0555_ = _0400_ ? _0728_ : _0213_;
  assign _0556_ = _0318_ ? _0550_ : _0213_;
  assign _0061_ = _0272_ ? _0556_ : is_alu_reg_imm;
  assign _0557_ = _0145_ ? 1'h1 : _0210_;
  assign _0558_ = _0410_ ? _0557_ : _0210_;
  assign _0559_ = _0318_ ? _0558_ : _0210_;
  assign _0560_ = _0272_ ? _0559_ : is_beq_bne_blt_bge_bltu_bgeu;
  assign _0063_ = resetn ? _0560_ : 1'h0;
  assign _0071_ = _0319_ ? _0267_ : is_sll_srl_sra;
  assign _0561_ = _0393_ ? 1'h1 : _0212_;
  assign _0562_ = _0165_ ? _0561_ : _0212_;
  assign _0563_ = _0318_ ? _0562_ : _0212_;
  assign _0070_ = _0272_ ? _0563_ : is_sb_sh_sw;
  assign _0065_ = _0319_ ? _0353_ : is_jalr_addi_slti_sltiu_xori_ori_andi;
  assign _0072_ = _0319_ ? _0265_ : is_slli_srli_srai;
  assign _0564_ = _0399_ ? 1'h1 : _0211_;
  assign _0565_ = _0165_ ? _0564_ : _0211_;
  assign _0566_ = _0318_ ? _0565_ : _0211_;
  assign _0066_ = _0272_ ? _0566_ : is_lb_lh_lw_lbu_lhu;
  assign _0567_ = _0318_ ? 1'h1 : 1'h0;
  assign _0001_ = _0272_ ? _0567_ : compressed_instr;
  assign _0568_ = _0319_ ? 1'h0 : _0727_;
  assign _0064_ = resetn ? _0568_ : 1'h0;
  function [31:0] _1341_;
    input [31:0] a;
    input [159:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        _1341_ = b[31:0];
      5'b???1?:
        _1341_ = b[63:32];
      5'b??1??:
        _1341_ = b[95:64];
      5'b?1???:
        _1341_ = b[127:96];
      5'b1????:
        _1341_ = b[159:128];
      default:
        _1341_ = a;
    endcase
  endfunction
  assign _0569_ = _1341_(32'b0000000000000000000000000000000x, { decoded_imm_uj, mem_rdata_q[31:12], 12'h000, mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31:20], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[7], mem_rdata_q[30:25], mem_rdata_q[11:8], 1'h0, mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31], mem_rdata_q[31:25], mem_rdata_q[11:7] }, { instr_jal, _0571_, _0570_, is_beq_bne_blt_bge_bltu_bgeu, is_sb_sh_sw });
  assign _0005_ = _0319_ ? _0569_ : decoded_imm;
  function [4:0] _1343_;
    input [4:0] a;
    input [9:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1343_ = b[4:0];
      2'b1?:
        _1343_ = b[9:5];
      default:
        _1343_ = a;
    endcase
  endfunction
  assign _0572_ = _1343_(5'h00, { _0574_, mem_rdata_latched[6:2] }, { _0398_, _0148_ });
  assign _0573_ = _0312_ ? mem_rdata_latched[6:2] : 5'h00;
  assign _0574_ = _0315_ ? mem_rdata_latched[6:2] : _0573_;
  function [4:0] _1346_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1346_ = b[4:0];
      3'b?1?:
        _1346_ = b[9:5];
      3'b1??:
        _1346_ = b[14:10];
      default:
        _1346_ = a;
    endcase
  endfunction
  assign _0575_ = _1346_(5'h00, { _0579_, _0578_, _0572_ }, { _0412_, _0410_, _0402_ });
  assign _0576_ = mem_rdata_latched[11] ? 5'h00 : mem_rdata_latched[6:2];
  assign _0577_ = _0199_ ? _0132_ : _0576_;
  assign _0578_ = _0398_ ? _0577_ : 5'h00;
  assign _0579_ = _0393_ ? _0132_ : 5'h00;
  assign _0580_ = _0318_ ? _0575_ : _0173_[24:20];
  assign _0009_ = _0272_ ? _0580_ : decoded_rs2;
  assign _0581_ = _0318_ ? { mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12], mem_rdata_latched[12] } : { _0173_[19:16], mem_rdata_latched[15:12] };
  assign _0006_[19:12] = _0272_ ? _0581_ : decoded_imm_uj[19:12];
  assign _0582_ = _0312_ ? mem_rdata_latched[11:7] : 5'h00;
  assign _0583_ = _0314_ ? 5'h01 : _0582_;
  assign _0584_ = _0315_ ? mem_rdata_latched[11:7] : _0583_;
  function [4:0] _1358_;
    input [4:0] a;
    input [9:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1358_ = b[4:0];
      2'b1?:
        _1358_ = b[9:5];
      default:
        _1358_ = a;
    endcase
  endfunction
  assign _0585_ = _1358_(5'h00, { mem_rdata_latched[11:7], _0584_ }, { _0146_, _0398_ });
  function [4:0] _1359_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1359_ = b[4:0];
      3'b?1?:
        _1359_ = b[9:5];
      3'b1??:
        _1359_ = b[14:10];
      default:
        _1359_ = a;
    endcase
  endfunction
  assign _0586_ = _1359_(5'h00, { _0592_, _0590_, _0585_ }, { _0412_, _0410_, _0402_ });
  assign _0587_ = mem_rdata_latched[11] ? 5'h00 : _0133_;
  assign _0588_ = _0198_ ? _0133_ : _0587_;
  assign _0589_ = _0199_ ? _0133_ : _0588_;
  function [4:0] _1363_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1363_ = b[4:0];
      3'b?1?:
        _1363_ = b[9:5];
      3'b1??:
        _1363_ = b[14:10];
      default:
        _1363_ = a;
    endcase
  endfunction
  assign _0590_ = _1363_(5'h00, { 5'h01, mem_rdata_latched[11:7], _0589_ }, { _0591_, _0149_, _0398_ });
  assign _0591_ = mem_rdata_latched[15:13] == 1'h1;
  assign _0592_ = _0146_ ? _0132_ : 5'h00;
  assign _0593_ = _0318_ ? _0586_ : mem_rdata_latched[11:7];
  assign _0007_ = _0272_ ? _0593_ : decoded_rd;
  assign _0056_ = _0319_ ? 1'h0 : instr_timer;
  assign _0057_ = _0272_ ? 1'h0 : instr_waitirq;
  assign _0033_ = _0319_ ? 1'h0 : instr_maskirq;
  assign _0040_ = _0272_ ? 1'h0 : instr_retirq;
  assign _0042_ = _0319_ ? 1'h0 : instr_setq;
  assign _0024_ = _0319_ ? 1'h0 : instr_getq;
  assign _0039_ = _0319_ ? _0261_ : instr_rdinstrh;
  assign _0038_ = _0319_ ? _0258_ : instr_rdinstr;
  assign _0037_ = _0319_ ? _0256_ : instr_rdcycleh;
  assign _0036_ = _0319_ ? _0252_ : instr_rdcycle;
  assign _0594_ = _0319_ ? _0249_ : instr_and;
  assign _0015_ = resetn ? _0594_ : 1'h0;
  assign _0595_ = _0319_ ? _0247_ : instr_or;
  assign _0034_ = resetn ? _0595_ : 1'h0;
  assign _0596_ = _0319_ ? _0245_ : instr_sra;
  assign _0050_ = resetn ? _0596_ : 1'h0;
  assign _0597_ = _0319_ ? _0244_ : instr_srl;
  assign _0052_ = resetn ? _0597_ : 1'h0;
  assign _0598_ = _0319_ ? _0242_ : instr_xor;
  assign _0058_ = resetn ? _0598_ : 1'h0;
  assign _0599_ = _0319_ ? _0240_ : instr_sltu;
  assign _0049_ = resetn ? _0599_ : 1'h0;
  assign _0600_ = _0319_ ? _0238_ : instr_slt;
  assign _0046_ = resetn ? _0600_ : 1'h0;
  assign _0601_ = _0319_ ? _0236_ : instr_sll;
  assign _0044_ = resetn ? _0601_ : 1'h0;
  assign _0602_ = _0319_ ? _0234_ : instr_sub;
  assign _0054_ = resetn ? _0602_ : 1'h0;
  assign _0603_ = _0319_ ? _0233_ : instr_add;
  assign _0013_ = resetn ? _0603_ : 1'h0;
  assign _0051_ = _0319_ ? _0231_ : instr_srai;
  assign _0053_ = _0319_ ? _0230_ : instr_srli;
  assign _0045_ = _0319_ ? _0228_ : instr_slli;
  assign _0604_ = _0319_ ? _0226_ : instr_andi;
  assign _0016_ = resetn ? _0604_ : 1'h0;
  assign _0605_ = _0319_ ? _0225_ : instr_ori;
  assign _0035_ = resetn ? _0605_ : 1'h0;
  assign _0606_ = _0319_ ? _0224_ : instr_xori;
  assign _0059_ = resetn ? _0606_ : 1'h0;
  assign _0607_ = _0319_ ? _0223_ : instr_sltiu;
  assign _0048_ = resetn ? _0607_ : 1'h0;
  assign _0608_ = _0319_ ? _0222_ : instr_slti;
  assign _0047_ = resetn ? _0608_ : 1'h0;
  assign _0609_ = _0319_ ? _0221_ : instr_addi;
  assign _0014_ = resetn ? _0609_ : 1'h0;
  assign _0055_ = _0319_ ? _0220_ : instr_sw;
  assign _0043_ = _0319_ ? _0219_ : instr_sh;
  assign _0041_ = _0319_ ? _0218_ : instr_sb;
  assign _0030_ = _0319_ ? _0217_ : instr_lhu;
  assign _0028_ = _0319_ ? _0216_ : instr_lbu;
  assign _0032_ = _0319_ ? _0328_ : instr_lw;
  assign _0029_ = _0319_ ? _0327_ : instr_lh;
  assign _0027_ = _0319_ ? _0326_ : instr_lb;
  assign _0610_ = _0319_ ? _0325_ : instr_bgeu;
  assign _0020_ = resetn ? _0610_ : 1'h0;
  assign _0611_ = _0319_ ? _0324_ : instr_bltu;
  assign _0022_ = resetn ? _0611_ : 1'h0;
  assign _0612_ = _0319_ ? _0323_ : instr_bge;
  assign _0019_ = resetn ? _0612_ : 1'h0;
  assign _0613_ = _0319_ ? _0322_ : instr_blt;
  assign _0021_ = resetn ? _0613_ : 1'h0;
  assign _0614_ = _0319_ ? _0321_ : instr_bne;
  assign _0023_ = resetn ? _0614_ : 1'h0;
  assign _0615_ = _0319_ ? _0320_ : instr_beq;
  assign _0018_ = resetn ? _0615_ : 1'h0;
  assign _0616_ = _0311_ ? 1'h1 : _0209_;
  assign _0617_ = _0314_ ? 1'h1 : _0616_;
  assign _0618_ = _0398_ ? _0617_ : _0209_;
  assign _0619_ = _0402_ ? _0618_ : _0209_;
  assign _0620_ = _0318_ ? _0619_ : _0209_;
  assign _0026_ = _0272_ ? _0620_ : instr_jalr;
  assign _0621_ = _0150_ ? 1'h1 : _0208_;
  assign _0622_ = mem_rdata_latched[15:13] == 3'h5;
  assign _0623_ = _0410_ ? _0621_ : _0208_;
  assign _0624_ = _0318_ ? _0623_ : _0208_;
  assign _0025_ = _0272_ ? _0624_ : instr_jal;
  assign _0017_ = _0272_ ? _0207_ : instr_auipc;
  assign _0625_ = _0195_ ? _0206_ : 1'h1;
  assign _0626_ = _0409_ ? _0625_ : _0206_;
  assign _0627_ = _0410_ ? _0626_ : _0206_;
  assign _0628_ = _0318_ ? _0627_ : _0206_;
  assign _0031_ = _0272_ ? _0628_ : instr_lui;
  function [31:0] _1450_;
    input [31:0] a;
    input [159:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        _1450_ = b[31:0];
      5'b???1?:
        _1450_ = b[63:32];
      5'b??1??:
        _1450_ = b[95:64];
      5'b?1???:
        _1450_ = b[127:96];
      5'b1????:
        _1450_ = b[159:128];
      default:
        _1450_ = a;
    endcase
  endfunction
  assign alu_out = _1450_(alu_shr, { alu_add_sub, 31'h00000000, alu_out_0, _0741_, _0385_, _0134_ }, { is_lui_auipc_jal_jalr_addi_add_sub, is_compare, _0355_, _0356_, _0357_ });
  function [0:0] _1451_;
    input [0:0] a;
    input [4:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        _1451_ = b[0:0];
      5'b???1?:
        _1451_ = b[1:1];
      5'b??1??:
        _1451_ = b[2:2];
      5'b?1???:
        _1451_ = b[3:3];
      5'b1????:
        _1451_ = b[4:4];
      default:
        _1451_ = a;
    endcase
  endfunction
  assign alu_out_0 = _1451_(alu_ltu, { alu_eq, _0329_, _0330_, _0331_, alu_lts }, { instr_beq, instr_bne, instr_bge, instr_bgeu, _0269_ });
  assign clear_prefetched_high_word = _0359_ ? 1'h1 : _0109_;
  assign _0109_ = prefetched_high_word ? clear_prefetched_high_word_q : 1'h0;
  assign _0110_ = _0151_ ? 1'h1 : 1'h0;
  function [31:0] _1455_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1455_ = b[31:0];
      2'b1?:
        _1455_ = b[63:32];
      default:
        _1455_ = a;
    endcase
  endfunction
  assign cpuregs_wrdata = _1455_(32'hxxxxxxxx, { _0124_, _0733_ }, { latched_branch, _0270_ });
  assign cpuregs_write = _0191_ ? _0110_ : 1'h0;
  assign _0000_[31] = _0271_ ? 1'h1 : 1'h0;
  assign _0120_ = mem_do_rdata ? 1'h0 : 1'h1;
  assign _0629_ = cpu_state == 2'h2;
  assign _0630_ = cpu_state == 3'h4;
  assign _0631_ = cpu_state == 4'h8;
  assign _0632_ = cpu_state == 5'h10;
  assign _0633_ = cpu_state == 6'h20;
  assign _0634_ = cpu_state == 8'h80;
  assign _0117_ = _0362_ ? _0120_ : 1'h0;
  assign _0119_ = _0362_ ? _0121_ : 1'h0;
  assign _0118_ = is_beq_bne_blt_bge_bltu_bgeu ? _0122_ : 1'h0;
  assign _0121_ = mem_do_wdata ? 1'h0 : 1'h1;
  assign _0122_ = alu_out_0 ? 1'h1 : 1'h0;
  assign _0115_ = latched_branch ? _0734_ : reg_next_pc;
  assign _0114_ = _0629_ ? _0119_ : 1'h0;
  assign _0112_ = _0152_ ? 1'h0 : _0117_;
  assign _0113_ = _0631_ ? _0118_ : 1'h0;
  assign _0107_ = resetn ? _0114_ : 1'h0;
  assign _0105_ = resetn ? _0112_ : 1'h0;
  assign _0106_ = resetn ? _0113_ : 1'h0;
  assign _0635_ = _0282_ ? 1'h1 : 1'h0;
  assign _0636_ = _0362_ ? _0635_ : 1'h0;
  assign _0637_ = _0153_ ? 1'h0 : _0636_;
  assign _0010_ = resetn ? _0637_ : 1'h0;
  assign _0638_ = _0282_ ? 1'h1 : _0272_;
  assign _0639_ = _0362_ ? _0638_ : _0272_;
  function [0:0] _1483_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1483_ = b[0:0];
      2'b1?:
        _1483_ = b[1:1];
      default:
        _1483_ = a;
    endcase
  endfunction
  assign _0640_ = _1483_(_0639_, { _0642_, _0272_ }, { _0631_, _0154_ });
  assign _0641_ = alu_out_0 ? 1'h0 : _0272_;
  assign _0642_ = is_beq_bne_blt_bge_bltu_bgeu ? _0641_ : _0272_;
  assign _0011_ = resetn ? _0640_ : _0272_;
  function [31:0] _1487_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1487_ = b[31:0];
      2'b1?:
        _1487_ = b[63:32];
      default:
        _1487_ = a;
    endcase
  endfunction
  assign _0643_ = _1487_({ mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7], mem_rdata_word[7:0] }, { mem_rdata_word, mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15], mem_rdata_word[15:0] }, { latched_is_lu, latched_is_lh });
  function [31:0] _1488_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1488_ = b[31:0];
      4'b??1?:
        _1488_ = b[63:32];
      4'b?1??:
        _1488_ = b[95:64];
      4'b1???:
        _1488_ = b[127:96];
      default:
        _1488_ = a;
    endcase
  endfunction
  assign _0102_ = _1488_(_0643_, { _0644_, _0129_, reg_op1, 32'hxxxxxxxx }, { _0633_, _0631_, _0630_, _0155_ });
  function [31:0] _1489_;
    input [31:0] a;
    input [95:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1489_ = b[31:0];
      3'b?1?:
        _1489_ = b[63:32];
      3'b1??:
        _1489_ = b[95:64];
      default:
        _1489_ = a;
    endcase
  endfunction
  assign _0644_ = _1489_(count_instr[63:32], { count_cycle[31:0], count_cycle[63:32], count_instr[31:0] }, { instr_rdcycle, _0277_, instr_rdinstr });
  assign _0645_ = _0281_ ? _0170_[4:0] : _0731_[4:0];
  function [4:0] _1491_;
    input [4:0] a;
    input [14:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1491_ = b[4:0];
      3'b?1?:
        _1491_ = b[9:5];
      3'b1??:
        _1491_ = b[14:10];
      default:
        _1491_ = a;
    endcase
  endfunction
  assign _0104_ = _1491_(5'hxx, { _0646_, cpuregs_rs2[4:0], _0645_ }, { _0633_, _0632_, _0630_ });
  function [4:0] _1492_;
    input [4:0] a;
    input [9:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1492_ = b[4:0];
      2'b1?:
        _1492_ = b[9:5];
      default:
        _1492_ = a;
    endcase
  endfunction
  assign _0646_ = _1492_(cpuregs_rs2[4:0], { decoded_rs2, 5'hxx }, { _0279_, _0156_ });
  assign _0647_ = _0634_ ? 1'h1 : 1'h0;
  assign _0108_ = resetn ? _0647_ : 1'h0;
  assign _0648_ = is_beq_bne_blt_bge_bltu_bgeu ? 5'h00 : latched_rd;
  function [4:0] _1496_;
    input [4:0] a;
    input [9:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1496_ = b[4:0];
      2'b1?:
        _1496_ = b[9:5];
      default:
        _1496_ = a;
    endcase
  endfunction
  assign _0649_ = _1496_(latched_rd, { decoded_rd, _0648_ }, { _0191_, _0631_ });
  assign _0079_ = resetn ? _0649_ : latched_rd;
  assign _0650_ = mem_do_rdata ? latched_is_lh : instr_lh;
  assign _0651_ = _0362_ ? _0650_ : latched_is_lh;
  function [0:0] _1500_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1500_ = b[0:0];
      2'b1?:
        _1500_ = b[1:1];
      default:
        _1500_ = a;
    endcase
  endfunction
  assign _0652_ = _1500_(_0651_, { 1'h0, latched_is_lh }, { _0191_, _0157_ });
  assign _0077_ = resetn ? _0652_ : 1'h0;
  assign _0653_ = mem_do_rdata ? latched_is_lu : is_lbu_lhu_lw;
  assign _0654_ = _0362_ ? _0653_ : latched_is_lu;
  function [0:0] _1504_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1504_ = b[0:0];
      2'b1?:
        _1504_ = b[1:1];
      default:
        _1504_ = a;
    endcase
  endfunction
  assign _0655_ = _1504_(_0654_, { 1'h0, latched_is_lu }, { _0191_, _0157_ });
  assign _0078_ = resetn ? _0655_ : 1'h0;
  assign _0656_ = _0191_ ? compressed_instr : latched_compr;
  assign _0076_ = resetn ? _0656_ : latched_compr;
  assign _0657_ = is_beq_bne_blt_bge_bltu_bgeu ? alu_out_0 : instr_jalr;
  function [0:0] _1509_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1509_ = b[0:0];
      2'b1?:
        _1509_ = b[1:1];
      default:
        _1509_ = a;
    endcase
  endfunction
  assign _0658_ = _1509_(latched_branch, { _0660_, _0657_ }, { _0191_, _0631_ });
  assign _0659_ = instr_jal ? 1'h1 : 1'h0;
  assign _0660_ = decoder_trigger ? _0659_ : 1'h0;
  assign _0075_ = resetn ? _0658_ : 1'h0;
  assign _0661_ = is_beq_bne_blt_bge_bltu_bgeu ? latched_stalu : 1'h1;
  function [0:0] _1514_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1514_ = b[0:0];
      2'b1?:
        _1514_ = b[1:1];
      default:
        _1514_ = a;
    endcase
  endfunction
  assign _0662_ = _1514_(latched_stalu, { 1'h0, _0661_ }, { _0191_, _0631_ });
  assign _0080_ = resetn ? _0662_ : 1'h0;
  function [0:0] _1516_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1516_ = b[0:0];
      4'b??1?:
        _1516_ = b[1:1];
      4'b?1??:
        _1516_ = b[2:2];
      4'b1???:
        _1516_ = b[3:3];
      default:
        _1516_ = a;
    endcase
  endfunction
  assign _0663_ = _1516_(1'h1, { 1'h0, _0665_, _0664_, latched_store }, { _0191_, _0633_, _0631_, _0158_ });
  assign _0664_ = is_beq_bne_blt_bge_bltu_bgeu ? alu_out_0 : 1'h1;
  assign _0665_ = _0276_ ? 1'h1 : latched_store;
  assign _0081_ = resetn ? _0663_ : 1'h0;
  assign _0060_ = resetn ? irq_state : 2'h0;
  assign _0666_ = _0282_ ? 8'h40 : cpu_state;
  assign _0667_ = _0362_ ? _0666_ : cpu_state;
  function [7:0] _1523_;
    input [7:0] a;
    input [47:0] b;
    input [5:0] s;
    casez (s) // synopsys parallel_case
      6'b?????1:
        _1523_ = b[7:0];
      6'b????1?:
        _1523_ = b[15:8];
      6'b???1??:
        _1523_ = b[23:16];
      6'b??1???:
        _1523_ = b[31:24];
      6'b?1????:
        _1523_ = b[39:32];
      6'b1?????:
        _1523_ = b[47:40];
      default:
        _1523_ = a;
    endcase
  endfunction
  assign _0668_ = _1523_(_0667_, { cpu_state, _0674_, _0672_, 4'h0, _0169_[3:0], _0671_, _0669_ }, { _0634_, _0191_, _0633_, _0632_, _0631_, _0630_ });
  assign _0669_ = _0192_ ? 8'h40 : cpu_state;
  assign _0670_ = mem_done ? 8'h40 : cpu_state;
  assign _0671_ = is_beq_bne_blt_bge_bltu_bgeu ? _0670_ : 8'h40;
  function [3:0] _1527_;
    input [3:0] a;
    input [7:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1527_ = b[3:0];
      2'b1?:
        _1527_ = b[7:4];
      default:
        _1527_ = a;
    endcase
  endfunction
  assign _0169_[3:0] = _1527_(4'h8, 8'h24, { is_sb_sh_sw, _0280_ });
  function [7:0] _1528_;
    input [7:0] a;
    input [39:0] b;
    input [4:0] s;
    casez (s) // synopsys parallel_case
      5'b????1:
        _1528_ = b[7:0];
      5'b???1?:
        _1528_ = b[15:8];
      5'b??1??:
        _1528_ = b[23:16];
      5'b?1???:
        _1528_ = b[31:24];
      5'b1????:
        _1528_ = b[39:32];
      default:
        _1528_ = a;
    endcase
  endfunction
  assign _0672_ = _1528_({ 4'h0, _0169_[3:0] }, 40'h8040010408, { _0275_, _0276_, _0278_, _0279_, _0159_ });
  assign _0673_ = instr_jal ? cpu_state : 8'h20;
  assign _0674_ = decoder_trigger ? _0673_ : cpu_state;
  assign _0675_ = resetn ? _0668_ : 8'h40;
  assign _0676_ = _0285_ ? 8'h80 : _0675_;
  assign _0677_ = _0286_ ? 8'h80 : _0676_;
  assign _0678_ = _0284_ ? _0677_ : _0675_;
  assign _0004_ = _0288_ ? 8'h80 : _0678_;
  assign _0679_ = _0366_ ? 1'h0 : mem_do_wdata;
  assign _0087_ = _0107_ ? 1'h1 : _0679_;
  assign _0680_ = _0366_ ? 1'h0 : mem_do_rdata;
  assign _0085_ = _0105_ ? 1'h1 : _0680_;
  assign _0681_ = _0192_ ? mem_do_prefetch : mem_do_rinst;
  function [0:0] _1541_;
    input [0:0] a;
    input [3:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1541_ = b[0:0];
      4'b??1?:
        _1541_ = b[1:1];
      4'b?1??:
        _1541_ = b[2:2];
      4'b1???:
        _1541_ = b[3:3];
      default:
        _1541_ = a;
    endcase
  endfunction
  assign _0682_ = _1541_(mem_do_rinst, { _0685_, _0684_, _0683_, _0681_ }, { _0191_, _0633_, _0632_, _0630_ });
  function [0:0] _1542_;
    input [0:0] a;
    input [1:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1542_ = b[0:0];
      2'b1?:
        _1542_ = b[1:1];
      default:
        _1542_ = a;
    endcase
  endfunction
  assign _0683_ = _1542_(mem_do_prefetch, { 1'h1, mem_do_rinst }, { is_sb_sh_sw, _0280_ });
  function [0:0] _1543_;
    input [0:0] a;
    input [2:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1543_ = b[0:0];
      3'b?1?:
        _1543_ = b[1:1];
      3'b1??:
        _1543_ = b[2:2];
      default:
        _1543_ = a;
    endcase
  endfunction
  assign _0684_ = _1543_(_0683_, { 1'h1, mem_do_rinst, mem_do_prefetch }, { _0278_, _0160_, _0159_ });
  assign _0685_ = decoder_trigger ? _0659_ : _0273_;
  assign _0686_ = resetn ? _0682_ : mem_do_rinst;
  assign _0687_ = _0366_ ? 1'h0 : _0686_;
  assign _0086_ = _0106_ ? 1'h1 : _0687_;
  assign _0688_ = instr_jal ? mem_do_prefetch : _0274_;
  assign _0689_ = decoder_trigger ? _0688_ : mem_do_prefetch;
  assign _0690_ = _0191_ ? _0689_ : mem_do_prefetch;
  assign _0691_ = resetn ? _0690_ : mem_do_prefetch;
  assign _0084_ = _0366_ ? 1'h0 : _0691_;
  function [1:0] _1553_;
    input [1:0] a;
    input [3:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1553_ = b[1:0];
      2'b1?:
        _1553_ = b[3:2];
      default:
        _1553_ = a;
    endcase
  endfunction
  assign _0692_ = _1553_(2'h0, 4'h9, { _0363_, _0364_ });
  assign _0693_ = mem_do_rdata ? mem_wordsize : _0692_;
  assign _0694_ = _0362_ ? _0693_ : mem_wordsize;
  function [1:0] _1556_;
    input [1:0] a;
    input [3:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1556_ = b[1:0];
      2'b1?:
        _1556_ = b[3:2];
      default:
        _1556_ = a;
    endcase
  endfunction
  assign _0695_ = _1556_(2'h0, 4'h9, { instr_sb, instr_sh });
  assign _0696_ = mem_do_wdata ? mem_wordsize : _0695_;
  assign _0697_ = _0362_ ? _0696_ : mem_wordsize;
  function [1:0] _1559_;
    input [1:0] a;
    input [5:0] b;
    input [2:0] s;
    casez (s) // synopsys parallel_case
      3'b??1:
        _1559_ = b[1:0];
      3'b?1?:
        _1559_ = b[3:2];
      3'b1??:
        _1559_ = b[5:4];
      default:
        _1559_ = a;
    endcase
  endfunction
  assign _0698_ = _1559_(_0694_, { 2'h0, mem_wordsize, _0697_ }, { _0191_, _0161_, _0629_ });
  assign _0095_ = resetn ? _0698_ : mem_wordsize;
  function [31:0] _1561_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1561_ = b[31:0];
      2'b1?:
        _1561_ = b[63:32];
      default:
        _1561_ = a;
    endcase
  endfunction
  assign _0699_ = _1561_(reg_op2, { _0700_, cpuregs_rs2 }, { _0633_, _0632_ });
  function [31:0] _1562_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1562_ = b[31:0];
      2'b1?:
        _1562_ = b[63:32];
      default:
        _1562_ = a;
    endcase
  endfunction
  assign _0700_ = _1562_(cpuregs_rs2, { 32'hxxxxxxxx, decoded_imm }, { _0162_, _0159_ });
  assign _0101_ = resetn ? _0699_ : reg_op2;
  assign _0701_ = mem_do_rdata ? reg_op1 : _0130_;
  assign _0702_ = _0362_ ? _0701_ : reg_op1;
  assign _0703_ = mem_do_wdata ? reg_op1 : _0130_;
  assign _0704_ = _0362_ ? _0703_ : reg_op1;
  function [31:0] _1568_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    casez (s) // synopsys parallel_case
      4'b???1:
        _1568_ = b[31:0];
      4'b??1?:
        _1568_ = b[63:32];
      4'b?1??:
        _1568_ = b[95:64];
      4'b1???:
        _1568_ = b[127:96];
      default:
        _1568_ = a;
    endcase
  endfunction
  assign _0705_ = _1568_(_0702_, { _0710_, reg_op1, _0709_, _0704_ }, { _0633_, _0163_, _0630_, _0629_ });
  function [31:0] _1569_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1569_ = b[31:0];
      2'b1?:
        _1569_ = b[63:32];
      default:
        _1569_ = a;
    endcase
  endfunction
  assign _0706_ = _1569_({ reg_op1[31], reg_op1[31:1] }, { reg_op1[30:0], 2'h0, reg_op1[31:1] }, { _0360_, _0361_ });
  function [31:0] _1570_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1570_ = b[31:0];
      2'b1?:
        _1570_ = b[63:32];
      default:
        _1570_ = a;
    endcase
  endfunction
  assign _0707_ = _1570_({ reg_op1[31], reg_op1[31], reg_op1[31], reg_op1[31], reg_op1[31:4] }, { reg_op1[27:0], 8'h00, reg_op1[31:4] }, { _0360_, _0361_ });
  assign _0708_ = _0281_ ? _0707_ : _0706_;
  assign _0709_ = _0192_ ? reg_op1 : _0708_;
  function [31:0] _1573_;
    input [31:0] a;
    input [63:0] b;
    input [1:0] s;
    casez (s) // synopsys parallel_case
      2'b?1:
        _1573_ = b[31:0];
      2'b1?:
        _1573_ = b[63:32];
      default:
        _1573_ = a;
    endcase
  endfunction
  assign _0710_ = _1573_(cpuregs_rs1, { 32'hxxxxxxxx, _0735_ }, { _0164_, is_lui_auipc_jal });
  assign _0100_ = resetn ? _0705_ : reg_op1;
  assign _0711_ = instr_jal ? _0128_ : _0126_;
  assign _0712_ = decoder_trigger ? _0711_ : _0115_;
  assign _0713_ = _0191_ ? _0712_ : reg_next_pc;
  assign _0099_ = resetn ? _0713_ : 32'd4;
  assign _0714_ = _0191_ ? _0115_ : reg_pc;
  assign _0103_ = resetn ? _0714_ : 32'd4;
  assign _0715_ = decoder_trigger ? _0127_ : count_instr;
  assign _0716_ = _0191_ ? _0715_ : count_instr;
  assign _0003_ = resetn ? _0716_ : 64'h0000000000000000;
  assign _0012_ = resetn ? eoi : 32'd0;
  assign _0097_ = resetn ? pcpi_valid : 1'h0;
  assign _0074_ = resetn ? _0308_ : 1'h0;
  assign _0717_ = last_mem_valid ? mem_la_firstword_reg : mem_la_firstword;
  assign _0089_ = resetn ? _0717_ : 1'h0;
  assign _0718_ = & { mem_state[0], mem_state[1] };
  assign _0719_ = & { mem_rdata_latched[0], mem_rdata_latched[1] };
  assign _0720_ = & { mem_rdata[0], mem_rdata[1] };
  assign _0721_ = | decoded_rs1;
  assign _0722_ = | decoded_rs2;
  assign _0723_ = | { _0264_, _0263_, _0262_ };
  assign _0724_ = | { _0174_, _0176_, _0178_, _0179_, _0180_, _0181_ };
  assign _0571_ = | { instr_lui, instr_auipc };
  assign _0570_ = | { instr_jalr, is_lb_lh_lw_lbu_lhu, is_alu_reg_imm };
  assign _0725_ = | { mem_state[0], mem_state[1] };
  assign is_rdcycle_rdcycleh_rdinstr_rdinstrh = | { instr_rdcycle, instr_rdcycleh, instr_rdinstr, instr_rdinstrh };
  assign _0068_ = | { instr_lui, instr_auipc, instr_jal };
  assign _0726_ = | { instr_lui, instr_auipc, instr_jal, instr_jalr, instr_addi, instr_add, instr_sub };
  assign _0073_ = | { instr_blt, instr_slti, instr_slt };
  assign _0067_ = | { instr_lw, instr_lbu, instr_lhu };
  assign _0727_ = | { instr_slti, instr_sltiu, instr_slt, instr_sltu, is_beq_bne_blt_bge_bltu_bgeu };
  assign _0728_ = | { mem_rdata_latched[5], mem_rdata_latched[6], mem_rdata_latched[7], mem_rdata_latched[8], mem_rdata_latched[9], mem_rdata_latched[10], mem_rdata_latched[11], mem_rdata_latched[12] };
  assign _0729_ = 1'h1 << reg_op1[1:0];
  assign alu_shr = $signed({ _0732_, reg_op1 }) >>> reg_op2[4:0];
  assign _0730_ = reg_op1 - reg_op2;
  assign _0170_[4:0] = reg_sh - 3'h4;
  assign _0731_[4:0] = reg_sh - 1'h1;
  assign next_pc = _0268_ ? reg_out : reg_next_pc;
  assign alu_add_sub = instr_sub ? _0730_ : _0123_;
  assign _0732_ = _0354_ ? reg_op1[31] : 1'h0;
  assign _0171_[2:0] = latched_compr ? 3'h2 : 3'h4;
  assign _0733_ = latched_stalu ? alu_out_q : reg_out;
  assign cpuregs_rs1 = _0721_ ? _0379_ : 32'd0;
  assign cpuregs_rs2 = _0722_ ? _0380_ : 32'd0;
  assign _0002_ = resetn ? _0125_ : 64'h0000000000000000;
  assign _0734_ = latched_store ? _0733_ : reg_next_pc;
  assign _0172_[2:0] = compressed_instr ? 3'h2 : 3'h4;
  assign _0735_ = instr_lui ? 32'd0 : reg_pc;
  assign mem_la_addr = _0367_ ? { _0131_, 2'h0 } : { reg_op1[31:2], 2'h0 };
  assign mem_rdata_latched_noshuffle = _0374_ ? mem_rdata : mem_rdata_q;
  assign _0736_[15:0] = _0292_ ? mem_rdata_latched_noshuffle[31:16] : mem_rdata_latched_noshuffle[15:0];
  assign { _0173_[31:16], _0737_[15:0] } = _0307_ ? { mem_rdata_latched_noshuffle[15:0], mem_16bit_buffer } : { mem_rdata_latched_noshuffle[31:16], _0736_[15:0] };
  assign mem_rdata_latched = _0306_ ? mem_16bit_buffer : _0737_[15:0];
  assign _0738_ = reg_op1[1] ? 4'hc : 4'h3;
  assign _0739_[5:0] = _0200_ ? 6'h20 : 6'h00;
  assign _0740_[1:0] = _0368_ ? 2'h0 : 2'h3;
  assign _0741_ = reg_op1 ^ reg_op2;
  picorv32_regs \cpuregs.0.0.0  (
    .A1ADDR(_0008_),
    .A1DATA(_0140_),
    .A2ADDR(_0009_),
    .A2DATA(_0141_),
    .B1ADDR(latched_rd),
    .B1DATA(cpuregs_wrdata),
    .B1EN(_0000_[31]),
    .CLK1(clk)
  );
  assign dbg_mem_addr = mem_addr;
  assign dbg_mem_instr = mem_instr;
  assign dbg_mem_rdata = mem_rdata;
  assign dbg_mem_ready = mem_ready;
  assign dbg_mem_valid = mem_valid;
  assign dbg_mem_wdata = mem_wdata;
  assign dbg_mem_wstrb = mem_wstrb;
  assign do_waitirq = trace_valid;
  assign pcpi_insn = 32'hxxxxxxxx;
  assign pcpi_rs1 = reg_op1;
  assign pcpi_rs2 = reg_op2;
  assign _0139_ = _0000_[31];
  assign _0136_ = latched_rd;
  assign _0137_ = cpuregs_wrdata;
  assign _0380_ = _0141_;
  assign _0379_ = _0168_;
endmodule
